name: Build and Push Docker Images

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  REGISTRY: docker.io
  IMAGE_NAME: jbuet/debug

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "version=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push non-root image (main version)
      - name: Build and push non-root image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: nonroot
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
            ${{ github.event_name != 'pull_request' && env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push root image
      - name: Build and push root image
        uses: docker/build-push-action@v6
        with:
          context: .
          target: root
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}-root
            ${{ github.event_name != 'pull_request' && env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-root
          cache-from: type=gha
          cache-to: type=gha,mode=max 